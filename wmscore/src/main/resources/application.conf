
pekko {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "wmscore.CborSerializable" = jackson-cbor
    }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  #   remote.artery {
  #     canonical.port = ${config.node_port}
  #     canonical.hostname = ${config.node_ip}
  #   }

  # Kubernetes configuration
  remote.artery {
    #canonical.port = ${config.node_port}
    #canonical.hostname = ${config.node_ip}

    canonical.hostname = ${config.node_ext_ip}      # external (logical) hostname
    canonical.port = ${config.node_port}            # external (logical) port

    bind.hostname = ${config.node_ip}            # internal (bind) hostname
    bind.port = ${config.node_port}              # internal (bind) port
  }

  cluster {
    seed-nodes = [
      "pekko://"${config.cluster.name}"@"${config.node1_ip}":"${config.node1_port}"",
      "pekko://"${config.cluster.name}"@"${config.node2_ip}":"${config.node2_port}"",
      "pekko://"${config.cluster.name}"@"${config.node3_ip}":"${config.node3_port}""
      ]

    sharding {
      number-of-shards = 100
    }

    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
  }
}

wmscore {
  routes.ask-timeout = 60s
}

config {
 cluster.name = Wms
 node_ip = "127.0.0.1"
 node_ip = ${?NODE_IP}
 node_ext_ip = "127.0.0.1"
 node_ext_ip = ${?NODE_EXT_IP}
 node_port = 0
 node_port = ${?NODE_PORT}
 node1_ip = "127.0.0.1"
 node1_ip = ${?NODE1_IP}
 node1_port = 7345
 node1_port = ${?NODE1_PORT}
 node2_ip = "127.0.0.1"
 node2_ip = ${?NODE2_IP}
 node2_port = 7355
 node2_port = ${?NODE2_PORT}
 node3_ip = "127.0.0.1"
 node3_ip = ${?NODE3_IP}
 node3_port = 7356
 node3_port = ${?NODE3_PORT}
}

